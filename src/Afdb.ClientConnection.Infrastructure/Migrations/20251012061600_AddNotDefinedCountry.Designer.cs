// <auto-generated />
using System;
using Afdb.ClientConnection.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Afdb.ClientConnection.Infrastructure.Migrations
{
    [DbContext(typeof(ClientConnectionDbContext))]
    [Migration("20251012061600_AddNotDefinedCountry")]
    partial class AddNotDefinedCountry
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.AccessRequestEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BusinessProfileEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EntraIdObjectId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("FinancingTypeEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("FunctionEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ProcessedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessingComments")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("RequestedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessProfileEntityId");

                    b.HasIndex("CountryEntityId");

                    b.HasIndex("Email");

                    b.HasIndex("FinancingTypeEntityId");

                    b.HasIndex("FunctionEntityId");

                    b.HasIndex("ProcessedById");

                    b.ToTable("AccessRequests");
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.AccessRequestProjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccessRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SapCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AccessRequestId", "SapCode")
                        .IsUnique();

                    b.ToTable("AccessRequestsProjects", (string)null);
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.AuditLogEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp");

                    b.HasIndex("UserId");

                    b.HasIndex("EntityName", "EntityId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.BusinessProfileEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("BusinessProfiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d8a54872-2e74-4de1-8f07-76d8e8275e01"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            Description = "Agency responsible for execution of projects",
                            IsActive = true,
                            Name = "Executing Agency"
                        },
                        new
                        {
                            Id = new Guid("2d42d812-7d9d-4c44-9c55-b93db6a9a21b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            Description = "Borrower",
                            IsActive = true,
                            Name = "Borrower"
                        },
                        new
                        {
                            Id = new Guid("a18f4194-b0fb-4682-8a4e-3f3991a9b632"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            Description = "Guarantor",
                            IsActive = true,
                            Name = "Technical Advisor"
                        });
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.ClaimEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClaimTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClaimTypeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("UserId");

                    b.ToTable("Claims", (string)null);
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.ClaimProcessEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClaimId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("ClaimProcesses", (string)null);
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.ClaimTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NameFr")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ClaimTypes", (string)null);
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.CountryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameFr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("16bf844f-81e8-409b-b6c0-066d46ef2047"),
                            Code = "DZ",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Algeria",
                            NameFr = "Algérie"
                        },
                        new
                        {
                            Id = new Guid("55ffe5b5-0dce-4242-a1c9-6cc9b31c6b48"),
                            Code = "AO",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Angola",
                            NameFr = "Angola"
                        },
                        new
                        {
                            Id = new Guid("44a832f3-9a2c-4360-bd0c-d197d91c7ffc"),
                            Code = "BJ",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Benin",
                            NameFr = "Bénin"
                        },
                        new
                        {
                            Id = new Guid("f5b32999-f5f4-43a0-a005-03150707509e"),
                            Code = "BW",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Botswana",
                            NameFr = "Botswana"
                        },
                        new
                        {
                            Id = new Guid("45cb5526-d90f-4fb2-aecc-bea64e04cc61"),
                            Code = "BF",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Burkina Faso",
                            NameFr = "Burkina Faso"
                        },
                        new
                        {
                            Id = new Guid("278c7840-dd64-4733-b370-d06ba365e4bd"),
                            Code = "BI",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Burundi",
                            NameFr = "Burundi"
                        },
                        new
                        {
                            Id = new Guid("9f95189f-6be4-445e-8bed-11abd207398f"),
                            Code = "CV",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Cabo Verde",
                            NameFr = "Cap-Vert"
                        },
                        new
                        {
                            Id = new Guid("40d52c17-ddbb-4191-9aad-095dc1f3afec"),
                            Code = "CM",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Cameroon",
                            NameFr = "Cameroun"
                        },
                        new
                        {
                            Id = new Guid("999588cd-23b2-4624-8903-7c95adb94377"),
                            Code = "CF",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Central African Republic",
                            NameFr = "République centrafricaine"
                        },
                        new
                        {
                            Id = new Guid("eaa3d3ff-8a69-4207-8b9a-9fee511707a0"),
                            Code = "TD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Chad",
                            NameFr = "Tchad"
                        },
                        new
                        {
                            Id = new Guid("06aac45f-afb8-4e16-bcb6-cb25f50f6c9a"),
                            Code = "KM",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Comoros",
                            NameFr = "Comores"
                        },
                        new
                        {
                            Id = new Guid("7f1f72df-fc52-468e-86dd-e10908252ab3"),
                            Code = "CD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Congo (Democratic Republic)",
                            NameFr = "République démocratique du Congo"
                        },
                        new
                        {
                            Id = new Guid("f78bc4c9-5d9d-4f75-89ec-44f40034be09"),
                            Code = "CG",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Congo",
                            NameFr = "République du Congo"
                        },
                        new
                        {
                            Id = new Guid("4ec7011e-9148-4383-8906-9d7ba8ed4aea"),
                            Code = "CI",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Côte d'Ivoire",
                            NameFr = "Côte d'Ivoire"
                        },
                        new
                        {
                            Id = new Guid("2e593d13-82ed-4d18-80ea-26393f4071c2"),
                            Code = "DJ",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Djibouti",
                            NameFr = "Djibouti"
                        },
                        new
                        {
                            Id = new Guid("3f9dc2e8-6c08-4320-b408-70b197db214c"),
                            Code = "EG",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Egypt",
                            NameFr = "Égypte"
                        },
                        new
                        {
                            Id = new Guid("c9de1d01-bdf7-4ea2-8493-c7c3de1e8db6"),
                            Code = "GQ",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Equatorial Guinea",
                            NameFr = "Guinée équatoriale"
                        },
                        new
                        {
                            Id = new Guid("32bcc345-48b0-4b88-b1b5-bc4120e42943"),
                            Code = "ER",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Eritrea",
                            NameFr = "Érythrée"
                        },
                        new
                        {
                            Id = new Guid("4ba00dd3-e832-42d1-8db7-d1ddd82a4977"),
                            Code = "ET",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Ethiopia",
                            NameFr = "Éthiopie"
                        },
                        new
                        {
                            Id = new Guid("8256266a-c436-4e12-899f-c95781b053e1"),
                            Code = "GA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Gabon",
                            NameFr = "Gabon"
                        },
                        new
                        {
                            Id = new Guid("8dddc3ca-8919-4c59-84cf-8a6af2f4144e"),
                            Code = "GM",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Gambia",
                            NameFr = "Gambie"
                        },
                        new
                        {
                            Id = new Guid("262a9bab-e842-4e51-b0c2-c4ab56184e2b"),
                            Code = "GH",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Ghana",
                            NameFr = "Ghana"
                        },
                        new
                        {
                            Id = new Guid("201e24e7-f4b4-4702-9556-2e2bcb5b2dc0"),
                            Code = "GN",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Guinea",
                            NameFr = "Guinée"
                        },
                        new
                        {
                            Id = new Guid("ff0551d8-5783-4b7a-a064-9bbb454e3c78"),
                            Code = "GW",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Guinea-Bissau",
                            NameFr = "Guinée-Bissau"
                        },
                        new
                        {
                            Id = new Guid("b8c61296-af91-4e53-89f3-f4d682b0350b"),
                            Code = "KE",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Kenya",
                            NameFr = "Kenya"
                        },
                        new
                        {
                            Id = new Guid("d62e490e-fc7a-43c8-aa32-05a1d0980110"),
                            Code = "LS",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Lesotho",
                            NameFr = "Lesotho"
                        },
                        new
                        {
                            Id = new Guid("3170066c-7064-4b49-af7e-dc87d8c9cbf2"),
                            Code = "LR",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Liberia",
                            NameFr = "Liberia"
                        },
                        new
                        {
                            Id = new Guid("bea01a0f-ae39-4d35-a15a-e84dacb23714"),
                            Code = "LY",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Libya",
                            NameFr = "Libye"
                        },
                        new
                        {
                            Id = new Guid("8ccc2bc5-8cb0-4e52-aa8f-f296d076f6a0"),
                            Code = "MG",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Madagascar",
                            NameFr = "Madagascar"
                        },
                        new
                        {
                            Id = new Guid("28f8e661-ef53-4266-baea-f943459ed3a0"),
                            Code = "MW",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Malawi",
                            NameFr = "Malawi"
                        },
                        new
                        {
                            Id = new Guid("93c5b5b9-a548-4ff2-8077-74f29bb41b78"),
                            Code = "ML",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Mali",
                            NameFr = "Mali"
                        },
                        new
                        {
                            Id = new Guid("3239c809-8568-4a03-960f-4b0f568a3ada"),
                            Code = "MR",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Mauritania",
                            NameFr = "Mauritanie"
                        },
                        new
                        {
                            Id = new Guid("5c82037c-98be-4d65-8fbb-4ae7d615caa2"),
                            Code = "MU",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Mauritius",
                            NameFr = "Maurice"
                        },
                        new
                        {
                            Id = new Guid("3e1e98d5-e342-45af-8919-8d27caeddd11"),
                            Code = "MA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Morocco",
                            NameFr = "Maroc"
                        },
                        new
                        {
                            Id = new Guid("ac9109d0-1c94-46b4-b1c5-95cecf53304e"),
                            Code = "MZ",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Mozambique",
                            NameFr = "Mozambique"
                        },
                        new
                        {
                            Id = new Guid("c941d4ab-cd7d-4225-9113-1ec2009bd627"),
                            Code = "NA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Namibia",
                            NameFr = "Namibie"
                        },
                        new
                        {
                            Id = new Guid("57d2a2c0-97f2-4d76-8509-335e85deea75"),
                            Code = "NE",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Niger",
                            NameFr = "Niger"
                        },
                        new
                        {
                            Id = new Guid("143fb95d-f41d-4af3-ac51-10f720f546a8"),
                            Code = "NG",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Nigeria",
                            NameFr = "Nigeria"
                        },
                        new
                        {
                            Id = new Guid("ddd70b66-ef0a-40be-9bf9-c601aa5ba34d"),
                            Code = "RW",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Rwanda",
                            NameFr = "Rwanda"
                        },
                        new
                        {
                            Id = new Guid("5d290047-6a5c-473e-aa21-9fe0a6db6376"),
                            Code = "ST",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Sao Tome and Principe",
                            NameFr = "Sao Tomé-et-Principe"
                        },
                        new
                        {
                            Id = new Guid("337112f4-e35e-44b8-9659-15dfafe0aa55"),
                            Code = "SN",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Senegal",
                            NameFr = "Sénégal"
                        },
                        new
                        {
                            Id = new Guid("2fdcdcb5-2f19-4232-a8d0-b80fa4e59dd1"),
                            Code = "SC",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Seychelles",
                            NameFr = "Seychelles"
                        },
                        new
                        {
                            Id = new Guid("20c99637-afcc-44d1-843e-c5f1866d0dd2"),
                            Code = "SL",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Sierra Leone",
                            NameFr = "Sierra Leone"
                        },
                        new
                        {
                            Id = new Guid("e64b4cd1-b88c-4d8f-9560-7a2afba4276e"),
                            Code = "SO",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Somalia",
                            NameFr = "Somalie"
                        },
                        new
                        {
                            Id = new Guid("45a74a51-ce4c-419e-a897-736c80c98ac3"),
                            Code = "ZA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "South Africa",
                            NameFr = "Afrique du Sud"
                        },
                        new
                        {
                            Id = new Guid("88a7942f-42da-488d-9cbf-1651744d8fe7"),
                            Code = "SS",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "South Sudan",
                            NameFr = "Soudan du Sud"
                        },
                        new
                        {
                            Id = new Guid("54c29f69-8e0e-4b4c-a937-301a3507c1ac"),
                            Code = "SD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Sudan",
                            NameFr = "Soudan"
                        },
                        new
                        {
                            Id = new Guid("b8951b42-af7f-40e5-bc53-704d1c5cdf57"),
                            Code = "TZ",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Tanzania",
                            NameFr = "Tanzanie"
                        },
                        new
                        {
                            Id = new Guid("456881e5-2731-447a-8221-41f59cadf64a"),
                            Code = "TG",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Togo",
                            NameFr = "Togo"
                        },
                        new
                        {
                            Id = new Guid("50de7424-4bb4-4f18-81d4-8c445f3c1571"),
                            Code = "TN",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Tunisia",
                            NameFr = "Tunisie"
                        },
                        new
                        {
                            Id = new Guid("6bc83388-ec40-48e0-bc3d-2c6b7111cafa"),
                            Code = "UG",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Uganda",
                            NameFr = "Ouganda"
                        },
                        new
                        {
                            Id = new Guid("1109d7e7-2f27-4da3-b3e8-46c2518412a7"),
                            Code = "ZM",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Zambia",
                            NameFr = "Zambie"
                        },
                        new
                        {
                            Id = new Guid("034d456d-1003-4b0f-8a10-826d6284a514"),
                            Code = "ZW",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = true,
                            Name = "Zimbabwe",
                            NameFr = "Zimbabwe"
                        },
                        new
                        {
                            Id = new Guid("91431d44-531f-48d1-b990-8bd34aa185f4"),
                            Code = "NOT",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            IsActive = false,
                            Name = "Not Defined",
                            NameFr = "Non défini"
                        });
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.FinancingTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("FinancingTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("27cfc0a1-682f-4e97-8d22-6416617f3706"),
                            Code = "PRIVATE",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            Description = "Financement d'origine privée",
                            IsActive = true,
                            Name = "Private"
                        },
                        new
                        {
                            Id = new Guid("a975c9e2-0cb2-4f83-876c-7078aaf66abd"),
                            Code = "PUBLIC",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            Description = "Financement d'origine publique",
                            IsActive = true,
                            Name = "Public"
                        },
                        new
                        {
                            Id = new Guid("1aefe328-1746-457c-9949-cfbaa3390c67"),
                            Code = "OTHER",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            Description = "Autre type de financement",
                            IsActive = true,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.FunctionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Functions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a2b3c4d-0001-4e5f-9012-abcdef123456"),
                            Code = "ADB_DESK_OFFICE",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            Description = "African Development Bank Desk Office",
                            IsActive = true,
                            Name = "ADB Desk Office"
                        },
                        new
                        {
                            Id = new Guid("1a2b3c4d-0002-4e5f-9012-abcdef123456"),
                            Code = "DIRECTOR_FIN_ADMIN",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            Description = "Director responsible for finance and administration",
                            IsActive = true,
                            Name = "Director/Finance and Administrative Manager"
                        },
                        new
                        {
                            Id = new Guid("1a2b3c4d-0003-4e5f-9012-abcdef123456"),
                            Code = "MINISTRY_STAFF",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            Description = "Staff from the Ministry",
                            IsActive = true,
                            Name = "Ministry Staff"
                        },
                        new
                        {
                            Id = new Guid("1a2b3c4d-0004-4e5f-9012-abcdef123456"),
                            Code = "PROJECT_ACCOUNTANT",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            Description = "Accountant working on projects",
                            IsActive = true,
                            Name = "Project Accountant"
                        },
                        new
                        {
                            Id = new Guid("1a2b3c4d-0005-4e5f-9012-abcdef123456"),
                            Code = "PROJECT_COORDINATOR",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            Description = "Coordinator for project activities",
                            IsActive = true,
                            Name = "Project Coordinator"
                        },
                        new
                        {
                            Id = new Guid("1a2b3c4d-0006-4e5f-9012-abcdef123456"),
                            Code = "OTHER",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            Description = "Other functions",
                            IsActive = true,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.OtpCodeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("Email");

                    b.ToTable("OtpCodes", (string)null);
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EntraIdObjectId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrganizationName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EntraIdObjectId")
                        .IsUnique()
                        .HasFilter("[EntraIdObjectId] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.AccessRequestEntity", b =>
                {
                    b.HasOne("Afdb.ClientConnection.Infrastructure.Data.Entities.BusinessProfileEntity", "BusinessProfile")
                        .WithMany()
                        .HasForeignKey("BusinessProfileEntityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Afdb.ClientConnection.Infrastructure.Data.Entities.CountryEntity", "Country")
                        .WithMany()
                        .HasForeignKey("CountryEntityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Afdb.ClientConnection.Infrastructure.Data.Entities.FinancingTypeEntity", "FinancingType")
                        .WithMany()
                        .HasForeignKey("FinancingTypeEntityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Afdb.ClientConnection.Infrastructure.Data.Entities.FunctionEntity", "Function")
                        .WithMany()
                        .HasForeignKey("FunctionEntityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Afdb.ClientConnection.Infrastructure.Data.Entities.UserEntity", "ProcessedBy")
                        .WithMany("ProcessedAccessRequests")
                        .HasForeignKey("ProcessedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("BusinessProfile");

                    b.Navigation("Country");

                    b.Navigation("FinancingType");

                    b.Navigation("Function");

                    b.Navigation("ProcessedBy");
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.AccessRequestProjectEntity", b =>
                {
                    b.HasOne("Afdb.ClientConnection.Infrastructure.Data.Entities.AccessRequestEntity", "AccessRequest")
                        .WithMany("Projects")
                        .HasForeignKey("AccessRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessRequest");
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.ClaimEntity", b =>
                {
                    b.HasOne("Afdb.ClientConnection.Infrastructure.Data.Entities.ClaimTypeEntity", "ClaimType")
                        .WithMany("Claims")
                        .HasForeignKey("ClaimTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Afdb.ClientConnection.Infrastructure.Data.Entities.CountryEntity", "Country")
                        .WithMany("Claims")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Afdb.ClientConnection.Infrastructure.Data.Entities.UserEntity", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClaimType");

                    b.Navigation("Country");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.ClaimProcessEntity", b =>
                {
                    b.HasOne("Afdb.ClientConnection.Infrastructure.Data.Entities.ClaimEntity", "Claim")
                        .WithMany("Processes")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Afdb.ClientConnection.Infrastructure.Data.Entities.UserEntity", "User")
                        .WithMany("ClaimProcesses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Claim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.AccessRequestEntity", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.ClaimEntity", b =>
                {
                    b.Navigation("Processes");
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.ClaimTypeEntity", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.CountryEntity", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("Afdb.ClientConnection.Infrastructure.Data.Entities.UserEntity", b =>
                {
                    b.Navigation("ClaimProcesses");

                    b.Navigation("Claims");

                    b.Navigation("ProcessedAccessRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
